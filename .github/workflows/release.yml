name: Upload Release Asset

on: 
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7.7'
          architecture: 'x64'
    - name: Install Requirements
      run: pip install -r requirements.txt
    - name: Build PyInstaller
      run: python setup.py pyinstaller
    - name: Dump version
      id: dump_version
      shell: python
      run: |
        exec(compile(open('picta_dl/version.py').read(), 'picta_dl/version.py', 'exec'))
        print('::set-output name=picta_version::' + __version__)
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: picta-dl ${{ steps.dump_version.outputs.picta_version }}
        draft: false
        prerelease: false
    - name: Upload Executable picta-dl.exe
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/picta-dl.exe
        asset_name: picta-dl.exe
        asset_content_type: application/octet-stream
  build-ubuntu:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7.7'
          architecture: 'x64'
    - name: Build Binary Distribution
      run: python setup.py bdist
    - name: Dump version
      id: dump_version
      shell: python
      run: |
        exec(compile(open('picta_dl/version.py').read(), 'picta_dl/version.py', 'exec'))
        print('::set-output name=picta_version::' + __version__)
    - name: Upload Binary Distribution to Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TAG: ${ GITHUB_REF#refs/tags/ }
      with:
        upload_url: format('https://uploads.github.com/repos/oleksis/youtube-dl/releases/${0}/assets', $GITHUB_TAG)
        asset_path: ./dist/picta_dl-${{ steps.dump_version.outputs.picta_version }}.linux-x86_64.tar.gz
        asset_name: picta_dl-${{ steps.dump_version.outputs.picta_version }}.linux-x86_64.tar.gz
        asset_content_type: application/octet-stream
